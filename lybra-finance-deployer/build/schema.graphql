type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  spender: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BorrowApyChanged @entity(immutable: true) {
  id: Bytes!
  newApy: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Burn @entity(immutable: true) {
  id: Bytes!
  sponsor: Bytes! # address
  onBehalfOf: Bytes! # address
  amount: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DepositEther @entity(immutable: true) {
  id: Bytes!
  sponsor: Bytes! # address
  onBehalfOf: Bytes! # address
  amount: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ESLBRMinterChanged @entity(immutable: true) {
  id: Bytes!
  pool: Bytes! # address
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FeeDistribution @entity(immutable: true) {
  id: Bytes!
  feeAddress: Bytes! # address
  feeAmount: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GovernanceAuthorityTransfer @entity(immutable: true) {
  id: Bytes!
  newGov: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type KeeperRateChanged @entity(immutable: true) {
  id: Bytes!
  newSlippage: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LSDistribution @entity(immutable: true) {
  id: Bytes!
  stETHAdded: BigInt! # uint256
  payoutEUSD: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LiquidationRecord @entity(immutable: true) {
  id: Bytes!
  provider: Bytes! # address
  keeper: Bytes! # address
  onBehalfOf: Bytes! # address
  eusdamount: BigInt! # uint256
  LiquidateEtherAmount: BigInt! # uint256
  keeperReward: BigInt! # uint256
  superLiquidation: Boolean! # bool
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Mint @entity(immutable: true) {
  id: Bytes!
  sponsor: Bytes! # address
  onBehalfOf: Bytes! # address
  amount: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RedemptionFeeChanged @entity(immutable: true) {
  id: Bytes!
  newSlippage: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RedemptionProvider @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  status: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RigidRedemption @entity(immutable: true) {
  id: Bytes!
  caller: Bytes! # address
  provider: Bytes! # address
  eusdAmount: BigInt! # uint256
  etherAmount: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SafeCollateralRateChanged @entity(immutable: true) {
  id: Bytes!
  newRatio: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ServiceFeePoolChanged @entity(immutable: true) {
  id: Bytes!
  pool: Bytes! # address
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SharesBurnt @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  preRebaseTokenAmount: BigInt! # uint256
  postRebaseTokenAmount: BigInt! # uint256
  sharesAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferShares @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  sharesValue: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type WithdrawEther @entity(immutable: true) {
  id: Bytes!
  sponsor: Bytes! # address
  onBehalfOf: Bytes! # address
  amount: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
